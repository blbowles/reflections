
# What happens when you initialize a repository? 
# Why do you need to do it?

When you initialize a repository git will create 
the necessary directories for the metadata. 
The metadata is used to track file attributes such 
as version, commit ID, repository, commit comments...

# How is the staging area different from the working 
# directory and the repository?

The staging area is used by git to mark files as 
being tracked before commiting them to the repository.

# What value do you think it offers?

This allows you to commit some of the files rather 
than all of the files in the directory.

# What are some situations when branches would be 
# helpful in keeping your history organized?
# How would branches help?

Some useful situations for creating branches would be
the following:
-making an experimental branch to test new features without
 modifying the stable, or master branch. The changes may or
 may not be merged back into the master branch.
-making  new versions of the code which will remain seperate

# How do the diagrams help you visualize the
# branch structure

Diagrams help you see the parents of each commit and which
commits can directly access other commits

# What are the pros and cons of Git's automatic
# merging vs. always doing merges manually

Automatic merging takes care of the easy merges. If there is
ever any ambiguity then human intervention is required.
Manual merging is tedious but may be required if there are
changes in both branches which will require review.


